@model MotoBest.Web.ViewModels.AdvertViewModel

<div class="mb-4">
    <div class="mt-4 mb-2 h4 text-truncate" onclick="manageTruncateClass(this)">@Model.Title</div>
    <a href="@Model.OriginalAdvertUrl">Виж оригиналната обява от @Model.AdvertProviderName</a>
</div>

<div class="col-12 mb-3 badge-dark rounded" style="max-height: 500px;">
    <div class="container-fluid">
        <img id="advert-image" src="@Model.ImageUrls.FirstOrDefault()"
             class="mx-auto img-fluid center-block d-block d-inline"
             alt="Снимка на обявата" />
    </div>
</div>

<div class="mb-5 text-center">
    <button class="mr-3 px-3 py-1 badge-dark rounded border-0" onclick="loadPreviousImage()">предишна</button>
    <span id="current-img-index" class="font-weight-bold"></span>
    <button class="ml-3 px-3 py-1 badge-dark rounded border-0" onclick="loadNextImage()">следваща</button>
</div>

<div class="my-3 p-3 h5 alert-success rounded">
    <span>Цена</span>
    <span class="float-right">@Model.Price</span>
</div>

<div class="mb-3">
    @{
        int index = 0;
        foreach (var infoPair in Model.InfoPairRows)
        {
            string backgroundStyleClass = index % 2 == 0 ? "alert-dark" : "alert-secondary";
            string blockCornersStyleClass = string.Empty;

            if (index == 0)
            {
                blockCornersStyleClass = "rounded-top";
            }

            if (index == Model.InfoPairRows.Count() - 1)
            {
                blockCornersStyleClass = "rounded-bottom";
            }

            <div class="col-12 p-2 @backgroundStyleClass @blockCornersStyleClass">
                <span class="pl-2 font-weight-bolder">@infoPair.Key</span>
                <span class="pr-2 float-right">@infoPair.Value</span>
            </div>

            index++;
        }
    }
</div>

@if (Model.LongDescription != null)
{
    <div class="col-12 p-3 alert-secondary rounded">
        <h5 class="h5 font-weight-bold">Допълнителна информация</h5>
        <p id="short-advert-desc" class="mt-2">@Model.ShortDescription<text>...</text></p>
        <p id="long-advert-desc" class="mt-2 d-none">@Model.LongDescription</p>

        @if (Model.LongDescription.Length > Model.ShortDescription.Length)
        {
            <button class="mt-2 p-1 btn btn-block btn-dark rounded" onclick="toggleDescription()">Покажи повече</button>
        }
    </div>
}

<style>
    #advert-image {
        max-height: 400px;
        border-left: 3px solid white;
        border-right: 3px solid white;
    }
</style>

<script>
    const showMoreMessage = "Покажи повече";
    const showLessMessage = "Покажи по-малко";

    const imageUrls = [
        @foreach (string imageUrl in Model.ImageUrls)
        {
            <text>"@imageUrl",</text>
        }
    ];

    let isShortDescViewShown = true
    let imageIndex = 0;

    function loadCurrentImage() {
        document.querySelector("#advert-image").src = imageUrls[imageIndex];
        updateCurrentImageIndexView();
    }

    function loadPreviousImage() {
        imageIndex--;
        if (imageIndex < 0) {
            imageIndex = imageUrls.length - 1;
        }
        loadCurrentImage();
    }

    function loadNextImage() {
        imageIndex++;
        if (imageIndex >= imageUrls.length) {
            imageIndex = 0;
        }
        loadCurrentImage();
    }

    function updateCurrentImageIndexView() {
        document.querySelector("#current-img-index").textContent = `${imageIndex + 1}/${imageUrls.length}`;
    }

    function manageTruncateClass(element) {
        const textTruncateClass = "text-truncate";
        if (element.classList.contains(textTruncateClass)) {
            element.classList.remove(textTruncateClass);
        } else {
            element.classList.add(textTruncateClass);
        }
    }

    function toggleDescription() {
        let longDescriptionView = document.querySelector("#long-advert-desc");
        let shortDescriptionView = document.querySelector("#short-advert-desc");
        
        if (isShortDescViewShown) {
            show(longDescriptionView);
            hide(shortDescriptionView);
            descButton.textContent = showLessMessage;
        } else {
            show(shortDescriptionView);
            hide(longDescriptionView);
            descButton.textContent = showMoreMessage;
        }

        isShortDescViewShown = !isShortDescViewShown;
    }

    loadCurrentImage();
</script>
